{"version":3,"sources":["components/text/title.js","components/card/ViewInput.js","components/table/index.js","components/select/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","dashboard/general/user/formInput.js","dashboard/general/user/modal.js","dashboard/general/user/index.js"],"names":["Title","Text","_ref","bold","children","rest","Object","C_Users_arlan_Documents_tutorial_mobile_umj_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","style","color","fontWeight","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","ViewInput","fieldName","value","customRender","ComponentValue","react__WEBPACK_IMPORTED_MODULE_1___default","marginBottom","toCapitalize","result","arguments","length","undefined","replace","charAt","toUpperCase","slice","MainTable","data","excludeColumns","columnProperty","C_Users_arlan_Documents_tutorial_mobile_umj_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","columns","arr","conditions","keys","filter","title","includes","map","column","key","dataIndex","i","condition","_objectSpread","getColumn","react__WEBPACK_IMPORTED_MODULE_4___default","antd_es_table__WEBPACK_IMPORTED_MODULE_1__","rowKey","id","_id","dataSource","defaultProps","Option","antd_es_select__WEBPACK_IMPORTED_MODULE_2__","select","optionList","type","label","primary","Fragment","htmlFor","concat","display","className","list","name","_toConsumableArray","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","FormInput","returnData","payload","_React$useState","React","useState","firstName","_React$useState2","slicedToArray","setFirstName","_React$useState3","lastName","_React$useState4","setLastName","_React$useState5","_React$useState6","email","setEmail","_React$useState7","_React$useState8","password","setPassword","_React$useState9","role","_React$useState10","setRole","_React$useState11","status","_React$useState12","statuses","setStatuses","nextData","prevData","usePrevious","prevType","useEffect","JSON","stringify","editForm","Component","Input","typeInput","state","props","required","Select","defaultValue","showSearch","width","createForm","toConsumableArray","form","react_default","onChange","console","log","e","target","objectToArray","obj","capitalize","filterField","fieldNames","currentField","ViewModal","openModal","onClose","newEntry","onViewData","onUpdateSuccess","edit","setEdit","typeform","setTypeform","inputData","setInputData","isUpdated","setIsupdated","_useStateValue","useStateValue","_useStateValue2","user","dispatch","_useStateDefault","useStateDefault","_useStateDefault2","errLoadingUser","loadingUser","openModalVisible","setOpenModalVisible","prevEntry","prevOpenModal","prevLoadingUser","onModalClose","_x","_onModalClose","apply","this","asyncToGenerator","regenerator_default","mark","_callee","view","wrap","_context","prev","next","stop","message","success","handleSave","create","updatedData","update","userdata","titles","modal","visible","onCancel","footer","es_button","loading","onClick","UserPage","pathname","history","location","t","useTranslation","loadListUser","onView","setOnView","_useStateValue2$","listUser","openViewModal","setOpenViewModal","setNewEntry","pageNumber","setPageNumber","prevListUser","prevPathName","loadData","selected","ColumnHeader","row","gutter","justifyContent","components_button","maxWidth","margin","background","layout","withHeader","helmet","tKey","content","react_router_dom","textDecoration","to","text_title","level","table","scroll","x","fixed","sorter","b","onRowClick","pagination","page","total","count","defaultCurrent","Number"],"mappings":"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","file":"static/js/11.c4f3bf60.chunk.js","sourcesContent":["import React from 'react'\nimport { Typography } from 'antd'\nimport { node, bool } from 'prop-types'\nconst { Title } = Typography\n\nfunction Text({ bold, children, ...rest }) {\n  const style = {\n    color: '#7F7F7F',\n    fontWeight: bold ? 'bold' : 500\n  }\n  return (\n    <Title style={style} {...rest}>\n      {children}\n    </Title>\n  )\n}\n\nText.propTypes = {\n  children: node,\n  bold: bool\n}\n\nexport default Text\n","import React from 'react'\nimport { string, func } from 'prop-types'\n\nconst ViewInput = ({ fieldName, value, customRender, ...rest }) => {\n  const ComponentValue = customRender ? customRender(value) : value\n  return (\n    <div style={{ marginBottom: 14 }} {...rest}>\n      <small style={{ fontWeight: 'bold' }}>{fieldName}</small>\n      <div>{ComponentValue}</div>\n    </div>\n  )\n}\nViewInput.propTypes = {\n  fieldName: string,\n  value: string,\n  customRender: func\n}\n\nexport default ViewInput\n","import React from 'react'\nimport { array, any } from 'prop-types'\nimport { Table } from 'antd'\nimport './style.css'\n\n// const toCapitalize = text => {\n//   return typeof text === 'string'\n//     ? text.split('_').reduce((acc, txt, index, arr) => {\n//         return acc + txt.charAt(0).toUpperCase() + txt.slice(1) + (index !== arr.length - 1 ? ' ' : '')\n//       }, '')\n//     : ''\n// }\n\nconst toCapitalize = (text = '') => {\n  const result = text.replace(/([A-Z])/g, ' $1')\n  const finalResult = result.charAt(0).toUpperCase() + result.slice(1)\n  return finalResult\n}\n\nfunction MainTable({ data, excludeColumns, columnProperty, ...rest }) {\n  const getColumn = arr => {\n    if (arr[0]) {\n      const conditions = columnProperty\n      const titles = Object.keys(arr[0]).filter(title => excludeColumns.includes(title) === false)\n      return titles.map(title => {\n        let column = {\n          title: toCapitalize(title),\n          key: title,\n          dataIndex: title\n        }\n        for (let i = 0; i < conditions.length; i++) {\n          let condition = conditions[i]\n          if (condition.dataIndex === title) {\n            column = {\n              ...column,\n              ...condition\n            }\n          }\n        }\n        return column\n      })\n    }\n  }\n\n  const columns = getColumn(data)\n\n  return (\n    <Table\n      rowKey={data => data.id || data._id}\n      columns={columns}\n      dataSource={data && data[0] ? data : null}\n      {...rest}\n    />\n  )\n}\n\nMainTable.propTypes = {\n  data: array,\n  excludeColumns: array,\n  columnProperty: array,\n  title: any\n}\n\nMainTable.defaultProps = {\n  data: [],\n  title: 'Result',\n  excludeColumns: []\n}\n\nexport default MainTable\n","import React from 'react'\nimport { array, string } from 'prop-types'\nimport './style.css'\n\nimport { Select } from 'antd'\n\nconst Option = Select.Option\n\nfunction select({ optionList, type, label, ...rest }) {\n  const primary = type === 'primary'\n  const color = primary ? '#D5D6DB' : '#2699FB'\n\n  return (\n    <>\n      <label\n        htmlFor={`select ${label}`}\n        style={{\n          display: 'block',\n          color: color,\n          fontWeight: 'bold'\n        }}\n      >\n        {label}\n      </label>\n      <div className={`select-root ${primary || ''}`}>\n        <Select {...rest}>\n          {optionList.map(list => (\n            <Option key={list.value} value={list.value}>\n              {list.name}\n            </Option>\n          ))}\n        </Select>\n      </div>\n    </>\n  )\n}\n\nselect.propTypes = {\n  optionList: array,\n  label: string,\n  type: string\n}\nselect.defaultProps = { optionList: [] }\n\nexport default select\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react'\nimport { string, object, func } from 'prop-types'\nimport { usePrevious } from 'context'\nimport Input from 'components/input'\nimport Select from 'components/select'\n\nexport default function FormInput({ type, returnData, payload }) {\n  const [firstName, setFirstName] = React.useState(payload ? payload.firstName : '')\n  const [lastName, setLastName] = React.useState(payload ? payload.lastName : '')\n  const [email, setEmail] = React.useState('')\n  const [password, setPassword] = React.useState(undefined)\n  const [role, setRole] = React.useState(payload ? payload.role : '')\n  const [statuses, setStatuses] = React.useState(payload ? payload.status : '')\n\n  const nextData = { firstName, lastName, password, email, role, status: statuses }\n  const prevData = usePrevious(nextData)\n  const prevType = usePrevious(type)\n  React.useEffect(() => {\n    if (JSON.stringify(prevData) !== JSON.stringify(nextData)) {\n      returnData(nextData)\n    }\n    if (type === 'create' && prevType !== type) {\n      clearForm()\n    }\n  }, [nextData, prevData, prevType, returnData, type])\n  const editForm = [\n    {\n      Component: Input,\n      typeInput: 'input',\n      state: [firstName, setFirstName],\n      label: 'Nama Depan *',\n      props: { type: 'text', required: true }\n    },\n    {\n      Component: Input,\n      typeInput: 'input',\n      state: [lastName, setLastName],\n      label: 'Nama Belakang',\n      props: { type: 'text' }\n    },\n    {\n      Component: Select,\n      typeInput: 'select',\n      state: [role, setRole],\n      label: 'Role *',\n      props: {\n        defaultValue: role,\n        showSearch: true,\n        style: {\n          width: '100%'\n        },\n        optionList: [\n          {\n            value: 'admin',\n            name: 'Administrator'\n          },\n          {\n            value: 'staf',\n            name: 'Staf Perkuliahan'\n          },\n          {\n            value: 'dosen',\n            name: 'Dosen'\n          },\n          {\n            value: 'mahasiswa',\n            name: 'Mahasiswa'\n          }\n        ]\n      }\n    },\n    {\n      Component: Select,\n      typeInput: 'select',\n      state: [statuses, setStatuses],\n      label: 'Status *',\n      props: {\n        defaultValue: statuses,\n        showSearch: true,\n        style: {\n          width: '100%'\n        },\n        optionList: [\n          {\n            value: 'confirmed',\n            name: 'Confirmed'\n          },\n          {\n            value: 'pending',\n            name: 'Pending'\n          },\n          {\n            value: 'blocked',\n            name: 'Blocked'\n          }\n        ]\n      }\n    }\n  ]\n\n  const createForm = [\n    ...editForm.slice(0, 2),\n    {\n      Component: Input,\n      typeInput: 'input',\n      state: [email, setEmail],\n      label: 'Email *',\n      props: { type: 'email' }\n    },\n    {\n      Component: Input,\n      typeInput: 'input',\n      state: [password, setPassword],\n      label: 'Password *',\n      props: { type: 'password' }\n    },\n    ...editForm.slice(-2)\n  ]\n\n  function clearForm() {\n    setFirstName('')\n    setLastName('')\n    setEmail('')\n    setPassword('')\n    setRole('')\n    setStatuses('')\n  }\n\n  const form = type === 'create' ? createForm : editForm\n\n  return (\n    <div className={type}>\n      <form onChange={() => console.log(123)}>\n        {form.map((data, i) => (\n          <div key={i}>\n            <label>\n              <small>{data.label}</small>\n            </label>\n            <data.Component\n              {...data.props}\n              onChange={e => {\n                if (data.typeInput === 'input') {\n                  data.state[1](e.target.value)\n                }\n                if (data.typeInput === 'select') {\n                  data.state[1](e)\n                }\n              }}\n              value={data.state[0]}\n            />\n          </div>\n        ))}\n      </form>\n    </div>\n  )\n}\nFormInput.propTypes = {\n  type: string,\n  payload: object,\n  returnData: func\n}\n","import React from 'react'\nimport { bool, func, object } from 'prop-types'\nimport { Modal, Button, message } from 'antd'\nimport { view, update, create } from 'context/user/action'\nimport { usePrevious, useStateValue, useStateDefault } from 'context'\n\nimport ViewInput from 'components/card/ViewInput'\n\nimport FormInput from './formInput'\n\nconst objectToArray = obj => {\n  const keys = Object.keys(obj)\n  return keys.map(key => ({ fieldName: key, value: obj[key] }))\n}\n\nconst capitalize = (text = '') => {\n  const result = text.replace(/([A-Z])/g, ' $1')\n  const finalResult = result.charAt(0).toUpperCase() + result.slice(1)\n  return finalResult\n}\n\nconst filterField = (fieldNames = [], currentField) => {\n  return !fieldNames.includes(currentField)\n}\n\nexport default function ViewModal({ openModal, onClose, newEntry, onViewData, onUpdateSuccess }) {\n  const [edit, setEdit] = React.useState(false)\n  const [typeform, setTypeform] = React.useState('edit')\n  const [inputData, setInputData] = React.useState({})\n  const [isUpdated, setIsupdated] = React.useState(false)\n  const [user, dispatch] = useStateValue('singleUser')\n  const [errLoadingUser, loadingUser] = useStateDefault('USER')\n  const [openModalVisible, setOpenModalVisible] = React.useState(openModal)\n  // set new data\n\n  const prevEntry = usePrevious(newEntry)\n  const prevOpenModal = usePrevious(openModal)\n  const prevLoadingUser = usePrevious(loadingUser)\n\n  React.useEffect(() => {\n    if (newEntry && prevEntry !== newEntry) {\n      setOpenModalVisible(true)\n      setEdit(true)\n      setTypeform('create')\n    }\n    if (openModal && prevOpenModal !== openModal) {\n      setOpenModalVisible(true)\n      view(dispatch, { id: onViewData._id })\n    }\n    if (loadingUser === false && loadingUser !== prevLoadingUser && isUpdated && !errLoadingUser) {\n      if (typeform !== 'create') {\n        view(dispatch, { id: onViewData._id })\n        onClose()\n        setTypeform('edit')\n        setEdit(false)\n      } else {\n        onModalClose()\n      }\n      if (user && user.message) {\n        message.success(user.message)\n      }\n      setIsupdated(false)\n      onUpdateSuccess()\n    }\n  }, [\n    dispatch,\n    errLoadingUser,\n    isUpdated,\n    loadingUser,\n    newEntry,\n    onClose,\n    onModalClose,\n    onUpdateSuccess,\n    onViewData._id,\n    openModal,\n    prevEntry,\n    prevLoadingUser,\n    prevOpenModal,\n    typeform,\n    user\n  ])\n\n  // actions\n\n  async function onModalClose (view) {  // eslint-disable-line\n    await setOpenModalVisible(false)\n    onClose()\n    setTypeform('edit')\n    setEdit(false)\n  }\n  const handleButtonEdit = () => {\n    setIsupdated(true)\n    if (edit) {\n      handleSave()\n    } else {\n      setEdit(true)\n    }\n  }\n\n  const handleSave = () => {\n    if (typeform === 'create') {\n      create(dispatch, inputData)\n    } else {\n      let updatedData = inputData\n      delete updatedData.password\n      delete updatedData.email\n      update(dispatch, updatedData, { id: user.data._id })\n    }\n  }\n\n  const userdata = onViewData.email || (user && user.data && user.data.email)\n  const titles = userdata ? 'User ' + userdata : 'User'\n  return (\n    <Modal\n      title={titles}\n      visible={openModalVisible}\n      onCancel={onModalClose}\n      footer={[\n        <Button loading={loadingUser} key=\"edit\" onClick={handleButtonEdit}>\n          {edit ? 'Save' : 'Edit'}\n        </Button>,\n        <Button key=\"close\" type=\"primary\" onClick={onModalClose}>\n          Close\n        </Button>\n      ]}\n    >\n      {edit ? (\n        <FormInput returnData={setInputData} type={typeform} payload={user ? user.data : {}} />\n      ) : user && user.data && !loadingUser ? (\n        <div className=\"view\">\n          {objectToArray(user.data)\n            .filter(data => filterField(['deviceIds', 'roles', '__v', 'password'], data.fieldName))\n            .map((data, i) => (\n              <ViewInput key={i} fieldName={capitalize(data.fieldName)} value={data.value} />\n            ))}\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Modal>\n  )\n}\nViewModal.propTypes = {\n  openModal: bool,\n  onClose: func,\n  newEntry: bool,\n  onViewData: object,\n  onUpdateSuccess: func\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { object } from 'prop-types'\nimport { Row } from 'antd'\nimport { useTranslation } from 'react-i18next'\nimport LayoutPage from 'components/layout'\nimport { list } from 'context/user/action'\nimport Content from 'components/layout/content'\nimport Helmet from 'components/helmet'\nimport Button from 'components/button'\nimport Table from 'components/table'\nimport Title from 'components/text/title'\n// import { encode, decode } from 'utils/queryString'\nimport { usePrevious, useStateValue, useStateDefault } from 'context'\n// import exData from './data.json'\nimport Modal from './modal'\n\nimport './style.css'\n\nfunction UserPage(props) {\n  const { history } = props\n  const pathname = history.location.pathname\n  const { t } = useTranslation() // t is translate function to show a message by language chosen\n  const tKey = 'dashboard.user.'\n  const [, loadListUser] = useStateDefault('LIST_USER')\n  const [onView, setOnView] = React.useState({})\n\n  const [listUser = [], dispatch] = useStateValue('listUser')\n  const [openViewModal, setOpenViewModal] = React.useState(false)\n  const [newEntry, setNewEntry] = React.useState(false)\n  const [pageNumber, setPageNumber] = React.useState(1)\n  const prevListUser = usePrevious(listUser)\n  const prevPathName = usePrevious(pathname)\n  React.useEffect(() => {\n    if (!listUser && listUser !== prevListUser) {\n      loadData()\n    } else {\n      if (pathname && prevPathName !== pathname) {\n        loadData()\n      }\n    }\n  }, [listUser, prevListUser, dispatch, loadData, prevPathName, pathname])\n  function loadData() { // eslint-disable-line\n    list(dispatch, {\n      selected: 'status firstName lastName role email'\n    })\n  }\n\n  const ColumnHeader = () => (\n    <>\n      <Row\n        gutter={24}\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginBottom: 28\n        }}\n      >\n        {/* <Button style={{ maxWidth: 280, margin: '0 14px' }} type=\"secondary\">\n          Export\n        </Button> */}\n        <Button\n          onClick={() => setNewEntry(true)}\n          style={{ maxWidth: 280, margin: '0 14px', background: '#35b97a' }}\n          type=\"secondary\"\n        >\n          Create\n        </Button>\n        {/* <span className=\"action-title\">\n          <Tooltip title=\"Export to file\">\n            <Icon type=\"export\" />\n          </Tooltip>\n        </span>\n        <span className=\"action-title\">\n          <Tooltip title=\"Create new record\">\n            <Icon type=\"plus-circle\" />\n          </Tooltip>\n        </span> */}\n      </Row>\n    </>\n  )\n\n  let columnProperty = [\n    // add special condition for one or each column here\n    {\n      dataIndex: 'id',\n      width: 50,\n      fixed: 'left',\n      sorter: (a, b) => a.id - b.id\n    }\n  ]\n\n  const handleRowClick = data => {\n    setOnView(data)\n    setOpenViewModal(true)\n  }\n  const title = 'User'\n  return (\n    <LayoutPage withHeader>\n      <Helmet>\n        <title>{t(tKey + 'pageTitle')}</title>\n      </Helmet>\n      <Modal\n        newEntry={newEntry}\n        openModal={openViewModal}\n        onViewData={onView}\n        onUpdateSuccess={loadData}\n        onClose={() => {\n          setOpenViewModal(false)\n          setNewEntry(false)\n          setOnView({})\n        }}\n      />\n      <Content>\n        <div>\n          <Link style={{ textDecoration: 'underline' }} to=\"/\">\n            Home\n          </Link>\n          {` / ${title}`}\n        </div>\n        <Title bold level={2}>\n          {title}\n        </Title>\n\n        <div className=\"section-row\">\n          <Table\n            title={() => <ColumnHeader />}\n            data={listUser ? listUser.data : []}\n            scroll={{ x: 1300 }}\n            columnProperty={columnProperty}\n            excludeColumns={['_id']}\n            onRowClick={handleRowClick}\n            pagination={{\n              onChange: page => {\n                setPageNumber(page)\n              },\n              total: listUser ? listUser.count : 10,\n              defaultCurrent: Number(pageNumber)\n            }}\n            loading={loadListUser}\n          />\n        </div>\n      </Content>\n    </LayoutPage>\n  )\n}\n\nUserPage.propTypes = {\n  history: object\n}\n\nexport default UserPage\n"],"sourceRoot":""}